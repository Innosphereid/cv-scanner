services:
  # Development Application Service
  app:
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    container_name: cv-scanner-app-dev
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cv_scanner_dev_db
      - DB_USER=postgres
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - DB_SCHEMA=public
      - DB_SSL=false
      - DB_LOGGING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
      - REDIS_KEY_PREFIX=cv-scanner-dev
      - LOG_LEVEL=debug
      - TYPEORM_MIGRATIONS_TS=0
    secrets:
      - db_password
      - cloudinary_cloud_name
      - cloudinary_api_key
      - cloudinary_api_secret
      - redis_password
    volumes:
      - ./src:/app/src
      - ./test:/app/test
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cv-scanner-dev-network

  # Development PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cv_scanner_postgres_dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=cv_scanner_dev_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - '5433:5432'
    networks:
      - cv-scanner-dev-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d cv_scanner_dev_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Development Redis Database
  redis:
    image: redis:7-alpine
    container_name: cv_scanner_redis_dev
    restart: unless-stopped
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    secrets:
      - redis_password
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru --requirepass redis123dev
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'redis123dev', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cv-scanner-dev-network

# Docker Secrets
secrets:
  db_password:
    file: ./secrets/db_password.txt
  cloudinary_cloud_name:
    file: ./secrets/cloudinary_cloud_name.txt
  cloudinary_api_key:
    file: ./secrets/cloudinary_api_key.txt
  cloudinary_api_secret:
    file: ./secrets/cloudinary_api_secret.txt
  redis_password:
    file: ./secrets/redis_password.txt

# Docker Volumes
volumes:
  postgres_dev_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local
  redis_data_dev:
    driver: local

# Docker Networks
networks:
  cv-scanner-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
